{
	"note": "Do not modify this file!. Create a file named tm-config.json with you configs. Your file will be merged at runtime over this one.",
	"id": "defaults",
	"version": "1.0",	
	
	"metadata": {
		"note": "TODO: Model classes can be generated automatically(freemaker) using default interpreter or your own but is better that you manually maintain them.",
		"generateClasses": "false",
		"models": [
			{
				"id": "Model",
				"class": "com.tugmodel.client.model.Model",
				"note": "If 'class' is specified then no need to specify 'parent':'<modelId>'.",
				"description": "parent for all models",
				"attributes": [
					{
						"id": "id",
						"dataType": {
							"id": "String"
						}
					}
				]			
			},
			{
				"id": "Config",
				"class": "com.tugmodel.client.model.config.Config",
				"description": "Base configuration obtained by merging your custom config from 'tugmodel-config.json' over defaults in 'tugmodel-config-defaults.json'.",
				"note": "If you want to store your custom config in a db, then overwrite the 'configTug' and do the defaults merging by either extending 'configTug' and/or calling it manually.",
				"TODO": "Consider 'postFilter': 'configTug'."				 
			}
			
		],
		"dataTypes": [
		
		]
	},
	
	"tugConfig": {
		"note": "Tug initiator for a model is the tug that serves the type of model or a parent class.",
		"tugs": [
			{
				"id": "baseTug",
				"class": "com.tugmodel.client.tug.BaseTug",
				"modelId": "Model",
				"mapperId": "defaultMapper"
			},
			{
				"id": "configTug",
				"class": "com.tugmodel.client.tug.config.ConfigTug",
				"modelId": "Config",
				"mapperId": "defaultMapper"
			},
			{
				"id": "metaTug",
				"class": "com.tugmodel.client.tug.meta.MetaTug",
				"modelId": "Meta",
				"mapperId": "defaultMapper"
			},
			{
				"id": "workflowSampleTug",
				"class": "com.tugmodel.client.tug.workflow.WorkflowTug",
				"modelId": "Model",
				"note": "This is a linear workflow(non BPMN), still events are available in order to trigger event termination or for registering transaction compensation events.", 
				"tugs": "authentication, authorization, manager, audit",
				"mapperId": "defaultMapper"
			}
		],
		"mappers": [
			{
				"id": "defaultMapper",
				"class": "com.tugmodel.client.mapper.JacksonMapper"
				
			}
		
		
		]
	}					
}